### Starting build.
# Target: src/main.ml.depends, tags: { extension:ml, file:src/main.ml, ocaml, ocamldep, quiet }
/usr/bin/ocamldep -modules src/main.ml > src/main.ml.depends # cached
# Target: src/analysis.ml.depends, tags: { extension:ml, file:src/analysis.ml, ocaml, ocamldep, quiet }
/usr/bin/ocamldep -modules src/analysis.ml > src/analysis.ml.depends
# Target: src/ast.ml.depends, tags: { extension:ml, file:src/ast.ml, ocaml, ocamldep, quiet }
/usr/bin/ocamldep -modules src/ast.ml > src/ast.ml.depends # cached
# Target: src/ast.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:src/ast.cmo, file:src/ast.ml, implem, ocaml, quiet }
/usr/bin/ocamlc -c -I src -o src/ast.cmo src/ast.ml # cached
# Target: src/eval.ml.depends, tags: { extension:ml, file:src/eval.ml, ocaml, ocamldep, quiet }
/usr/bin/ocamldep -modules src/eval.ml > src/eval.ml.depends # cached
# Target: src/eval.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:src/eval.cmo, file:src/eval.ml, implem, ocaml, quiet }
/usr/bin/ocamlc -c -I src -o src/eval.cmo src/eval.ml # cached
# Target: src/int_analysis.ml.depends, tags: { extension:ml, file:src/int_analysis.ml, ocaml, ocamldep, quiet }
/usr/bin/ocamldep -modules src/int_analysis.ml > src/int_analysis.ml.depends # cached
# Target: src/analysis.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:src/analysis.cmo, file:src/analysis.ml, implem, ocaml, quiet }
/usr/bin/ocamlc -c -I src -o src/analysis.cmo src/analysis.ml
# Target: src/interval.ml.depends, tags: { extension:ml, file:src/interval.ml, ocaml, ocamldep, quiet }
/usr/bin/ocamldep -modules src/interval.ml > src/interval.ml.depends # cached
# Target: src/interval.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:src/interval.cmo, file:src/interval.ml, implem, ocaml, quiet }
/usr/bin/ocamlc -c -I src -o src/interval.cmo src/interval.ml # cached
# Target: src/lexer.mll, tags: { extension:mll, file:src/lexer.mll, lexer, ocaml, ocamllex, quiet }
/usr/bin/ocamllex -q src/lexer.mll # cached
# Target: src/lexer.ml.depends, tags: { extension:ml, file:src/lexer.ml, ocaml, ocamldep, quiet }
/usr/bin/ocamldep -modules src/lexer.ml > src/lexer.ml.depends # cached
# Target: src/parser.mly, tags: { extension:mly, file:src/parser.mly, ocaml, ocamlyacc, parser, quiet }
/usr/bin/ocamlyacc src/parser.mly # cached
# Target: src/parser.mli.depends, tags: { extension:mli, file:src/parser.mli, ocaml, ocamldep, quiet }
/usr/bin/ocamldep -modules src/parser.mli > src/parser.mli.depends # cached
# Target: src/parser.cmi, tags: { byte, compile, extension:mli, file:src/parser.mli, interf, ocaml, quiet }
/usr/bin/ocamlc -c -I src -o src/parser.cmi src/parser.mli # cached
# Target: src/lexer.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:src/lexer.cmo, file:src/lexer.ml, implem, ocaml, quiet }
/usr/bin/ocamlc -c -I src -o src/lexer.cmo src/lexer.ml # cached
# Target: src/pr_analysis.ml.depends, tags: { extension:ml, file:src/pr_analysis.ml, ocaml, ocamldep, quiet }
/usr/bin/ocamldep -modules src/pr_analysis.ml > src/pr_analysis.ml.depends # cached
# Target: src/parity.ml.depends, tags: { extension:ml, file:src/parity.ml, ocaml, ocamldep, quiet }
/usr/bin/ocamldep -modules src/parity.ml > src/parity.ml.depends # cached
# Target: src/parity.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:src/parity.cmo, file:src/parity.ml, implem, ocaml, quiet }
/usr/bin/ocamlc -c -I src -o src/parity.cmo src/parity.ml # cached
# Target: src/wellformed.ml.depends, tags: { extension:ml, file:src/wellformed.ml, ocaml, ocamldep, quiet }
/usr/bin/ocamldep -modules src/wellformed.ml > src/wellformed.ml.depends # cached
# Target: src/wellformed.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:src/wellformed.cmo, file:src/wellformed.ml, implem, ocaml, quiet }
/usr/bin/ocamlc -c -I src -o src/wellformed.cmo src/wellformed.ml # cached
# Target: src/int_analysis.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:src/int_analysis.cmo, file:src/int_analysis.ml, implem, ocaml, quiet }
/usr/bin/ocamlc -c -I src -o src/int_analysis.cmo src/int_analysis.ml
# Target: src/pr_analysis.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:src/pr_analysis.cmo, file:src/pr_analysis.ml, implem, ocaml, quiet }
/usr/bin/ocamlc -c -I src -o src/pr_analysis.cmo src/pr_analysis.ml
# Target: src/main.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:src/main.cmo, file:src/main.ml, implem, ocaml, quiet }
/usr/bin/ocamlc -c -I src -o src/main.cmo src/main.ml
# Target: src/parser.ml.depends, tags: { extension:ml, file:src/parser.ml, ocaml, ocamldep, quiet }
/usr/bin/ocamldep -modules src/parser.ml > src/parser.ml.depends # cached
# Target: src/parser.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:src/parser.cmo, file:src/parser.ml, implem, ocaml, quiet }
/usr/bin/ocamlc -c -I src -o src/parser.cmo src/parser.ml # cached
# Target: src/main.byte, tags: { byte, dont_link_with, extension:byte, file:src/main.byte, link, ocaml, program, quiet }
/usr/bin/ocamlc src/ast.cmo src/analysis.cmo src/eval.cmo src/interval.cmo src/int_analysis.cmo src/parser.cmo src/lexer.cmo src/parity.cmo src/pr_analysis.cmo src/wellformed.cmo src/main.cmo -o src/main.byte
# Compilation successful.
